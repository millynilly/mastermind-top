#!/usr/bin/env ruby

#Intro text. User options -> Play. Quit.
#User -> play _> new-game
#new-game -> set-code / get-user-guess / score-guess

$code = []

def intro
  puts 'Play Mastermind'
  puts '---------------'
  puts 'Guess the four digit code generated by the computer.'
  puts "\nDigits can be from 1 to 6"
  puts '1   2   3   4   5   6'
  puts "\nAfter your guess, feedback is given:"
  puts "\tX means you guessed the right digit in the right position."
  puts "\tO means you guessed the right digit but in the wrong position."
  puts "\nYou have 12 guesses."
  puts "\nEnter 'p' to start. Enter 'q' at any time to quit."
  get_input
end



def get_input
  input = gets.chomp
  if validate(input)   
    case input
    when 'p'
      new_game
    when 'q'
      clear
    else
      score_guess(input)
    end
  end
end


def validate(input)
  puts 'validate'
  return true if input == 'p' || input == 'q'
  return false unless input.to_i.integer?
  return false unless input.length == 4
  return true if input.split('').all? { |digit| digit.to_i.between?(1, 6) }
  puts 'Invalid input. Try again.'
  false
end

def clear
  puts 'Clear'
end

def new_game
  puts 'New game'
  clear
  generate_code
  get_input
end



def generate_code
  digits = [*1..6]
  4.times { $code.push(digits.sample()) }
  puts $code
  $code
end


def score_guess(code)
  puts 'Score guess'
  digits = code.split('')
  correct = ''
  partial = ''
  digits.each_with_index do |digit, ind|
    digit = digit.to_i
    if digit == $code[ind]
      correct += 'X'
    elsif $code.include?(digit)
      partial += 'O'
    end
  end
  
  puts correct == 'XXXX' ? 'Win!' : correct, partial
end

intro